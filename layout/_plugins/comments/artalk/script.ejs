<script>
  volantis.layoutHelper("comments", `<div id="artalk_container"><i class="fa-solid fa-cog fa-spin fa-fw fa-2x"></i></div>`);

  function load_artalk() {
    if (!document.querySelector("#artalk_container")) return;

    volantis.css("<%- theme.comments.artalk.css %>");

    volantis.js("<%- theme.comments.artalk.js %>")
      .then(() => {
        if (typeof Artalk === 'undefined') {
          console.error('Artalk.js loaded but Artalk is not defined');
          return;
        }
        return pjax_artalk();
      })
      .catch(err => {
        console.error('Failed to load Artalk.js:', err);
      });
  }

  function pjax_artalk() {
    if (!document.querySelector("#artalk_container")) return;

    let path = pdata.commentPath;
    let placeholder = pdata.commentPlaceholder || "<%= theme.comments.artalk.placeholder %>" || "";
    if (!path) {
      path = '<%= theme.comments.artalk.path %>' || decodeURI(window.location.pathname);
    }
    if (!'<%= config.permalink %>'.includes('/index.html')) {
      path = path.replace(/\/index\.html$/, '/').replace(/\.html$/, '');
    }

    volantis.artalk = Artalk.init(Object.assign(<%- JSON.stringify(theme.comments.artalk) %>, {
      el: '#artalk_container',
      pageKey: path,
      pageTitle: document.title,
      placeholder: placeholder,
      useBackendConf: true,
      site: '<%= config.title %>',
      darkMode: volantis.dark.mode === "dark",
      pvEl: '#artalk_visitors',

      <% if(!!theme.comments.artalk.imageUploader?.api){ %>
      imgUploader: function(file) {
        let headers = new Headers();
        headers.set('Accept', 'application/json');
        <% if(!!theme.comments.artalk.imageUploader?.token) { %>
          headers.set('Authorization', '<%= theme.comments.artalk.imageUploader?.token %>');
        <% } %>
        let formData = new FormData();
        formData.append('file', file);
        return fetch('<%= theme.comments.artalk.imageUploader?.api %>', {
          method: 'POST',
          body: formData,
          headers: headers
        })
        .then(resp => resp.json())
        .then(resp => resp.<%= theme.comments.artalk.imageUploader?.resp %>);
      },
      <% } %>
    }));

    Artalk.use(ctx => {
      ctx.on('list-loaded', () => {
        if (typeof VolantisFancyBox === "undefined") {
          const checkFancyBox = setInterval(() => {
            if (typeof VolantisFancyBox === "undefined") return;
            clearInterval(checkFancyBox);
            VolantisFancyBox.groupBind('.atk-content img:not([atk-emoticon])', 'Comments');
          }, 100);
        } else {
          VolantisFancyBox.groupBind('.atk-content img:not([atk-emoticon])', 'Comments');
        }
      });
    });
  }

  load_artalk();

  volantis.pjax.push(() => {
    if (typeof Artalk === "undefined") {
      load_artalk();
    } else {
      pjax_artalk();
    }
  }, 'artalk');

  function dark_artalk() {
    if (!document.querySelector("#artalk_container")) return;
    if (volantis.artalk && typeof volantis.artalk.setDarkMode === 'function') {
      volantis.artalk.setDarkMode(volantis.dark.mode === "dark");
    }
  }
  volantis.dark.push(dark_artalk);
</script>
